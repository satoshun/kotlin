FILE: simple.kt
    public abstract interface S : R|kotlin/Any| {
    }
    public abstract interface A : R|S| {
    }
    public abstract interface B : R|S| {
    }
    public final fun <R> materialize(): R|R| {
        ^materialize throw R|java/lang/Exception.Exception|()
    }
    public final fun <K> select(x: R|K|, y: R|K|): R|K| {
        ^select throw R|java/lang/Exception.Exception|()
    }
    public final fun takeA(x: R|A|): R|kotlin/Unit| {
    }
    public final fun test_3(): R|kotlin/Unit| {
        R|/takeA|(R|/select|<R|A|>(R|/materialize|<R|A|>(), R|/materialize|<R|A|>()))
    }
